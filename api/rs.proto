syntax = "proto3";

//生成文件所在包名
option java_package = "cn.aberic.lily.api";
//生成的java文件名
option java_outer_classname = "RSProto";

package api;

import "api/data.proto";
import "api/conf.proto";

// ReqConf 请求获取数据库引擎对象
message ReqConf {
}

// RespConf 响应获取数据库引擎对象
message RespConf {
    Code code = 1; // code 响应结果码
    Conf conf = 2; // conf 数据库引擎对象
    string errMsg = 3; // errMsg 错误信息
}

// ReqDatabases 请求获取数据库集合
message ReqDatabases {
}

// RespDatabases 响应获取数据库集合
message RespDatabases {
    Code code = 1; // code 响应结果码
    repeated Database databases = 2; // databases 数据库对象集合
    string errMsg = 3; // errMsg 错误信息
}

// ReqForms 请求获取数据库表集合
message ReqForms {
    string databaseName = 1;
}

// RespForms 响应获取数据库表集合
message RespForms {
    Code code = 1; // code 响应结果码
    repeated Form forms = 2; // forms 数据库表对象集合
    string errMsg = 3; // errMsg 错误信息
}

// ReqCreateDatabase 请求新建数据库
message ReqCreateDatabase {
    string name = 1; // name 数据库名称，根据需求可以随时变化
    string comment = 2; // comment 数据库描述
}

// RespDatabase 响应新建数据库
message RespDatabase {
    Code code = 1; // Code 响应结果码
    Database database = 2; // database 数据库对象
    string errMsg = 3; // errMsg 错误信息
}

// ReqCreateForm 请求创建表
message ReqCreateForm {
    string databaseName = 1; // databaseName 数据库名称
    string name = 2; // name 表名称
    string comment = 3; // comment 表描述
    FormType formType = 4; // FormType 表类型
}

// ReqKey 请求新建主键
message ReqCreateKey {
    string databaseName = 1; // databaseName 数据库名称
    string formName = 2; // formName 表名称
    string keyStructure = 3; // comment 主键结构名，按照规范结构组成的主键字段名称，由对象结构层级字段通过'.'组成，如'i','in.s'
}

// ReqIndex 请求新建索引
message ReqCreateIndex {
    string databaseName = 1; // databaseName 数据库名称
    string formName = 2; // formName 表名称
    string keyStructure = 3; // comment 主键结构名，按照规范结构组成的主键字段名称，由对象结构层级字段通过'.'组成，如'i','in.s'
}

// ReqPutD 新增数据
message ReqPutD {
    string key = 1; // key 数据库名称
    bytes value = 2; // value 插入数据对象
}

// RespPutD 响应新增数据
message RespPutD {
    Code code = 1; // code 响应结果码
    uint64 hashKey = 2; // hashKey hashKey
    string errMsg = 3; // errMsg 错误信息
}

// ReqSetD 新增数据
message ReqSetD {
    string key = 1; // key 数据库名称
    bytes value = 2; // value 插入数据对象
}

// RespSetD 响应新增数据
message RespSetD {
    Code code = 1; // code 响应结果码
    uint64 hashKey = 2; // hashKey hashKey
    string errMsg = 3; // errMsg 错误信息
}

// ReqGetD 获取数据
message ReqGetD {
    string key = 1; // key 数据库名称
}

// RespGetD 响应获取数据
message RespGetD {
    Code code = 1; // code 响应结果码
    bytes value = 2; // value value
    string errMsg = 3; // errMsg 错误信息
}

// ReqPut 新增数据
message ReqPut {
    string databaseName = 1; // databaseName 数据库名称
    string formName = 2; // formName 表名称
    string key = 3; // key 数据库名称
    bytes value = 4; // value 插入数据对象
}

// RespPut 响应新增数据
message RespPut {
    Code code = 1; // code 响应结果码
    uint64 hashKey = 2; // hashKey hashKey
    string errMsg = 3; // errMsg 错误信息
}

// ReqSet 新增数据
message ReqSet {
    string databaseName = 1; // databaseName 数据库名称
    string formName = 2; // formName 表名称
    string key = 3; // key 数据库名称
    bytes value = 4; // value 插入数据对象
}

// RespSet 响应新增数据
message RespSet {
    Code code = 1; // code 响应结果码
    uint64 hashKey = 2; // hashKey hashKey
    string errMsg = 3; // errMsg 错误信息
}

// ReqGet 获取数据
message ReqGet {
    string databaseName = 1; // databaseName 数据库名称
    string formName = 2; // formName 表名称
    string key = 3; // key 数据库名称
}

// RespGet 响应获取数据
message RespGet {
    Code code = 1; // code 响应结果码
    bytes value = 2; // value value
    string errMsg = 3; // errMsg 错误信息
}

// ReqInsert 新增数据
message ReqInsert {
    string databaseName = 1; // databaseName 数据库名称
    string formName = 2; // formName 表名称
    bytes value = 3; // value 插入数据对象
}

// RespInsert 响应新增数据
message RespInsert {
    Code code = 1; // code 响应结果码
    uint64 hashKey = 2; // hashKey hashKey
    string errMsg = 3; // errMsg 错误信息
}

// ReqUpdate 更新数据
message ReqUpdate {
    string databaseName = 1; // databaseName 数据库名称
    string formName = 2; // formName 表名称
    bytes value = 3; // value 插入数据对象
}

// ReqSelect 获取数据
message ReqSelect {
    string databaseName = 1; // databaseName 数据库名称
    string formName = 2; // formName 表名称
    Selector Selector = 3; // selector 条件选择器
}

// RespSelect 响应获取数据
message RespSelect {
    Code code = 1; // code 响应结果码
    int32 count = 2; // count 获取数据总条数
    bytes value = 3; // value 获取数据结果
    string errMsg = 4; // errMsg 错误信息
}

// ReqDelete 删除数据
message ReqDelete {
    string databaseName = 1; // databaseName 数据库名称
    string formName = 2; // formName 表名称
    Selector Selector = 3; // selector 条件选择器
}

// Resp 通用响应对象
message Resp {
    Code code = 1; // code 响应结果码
    string errMsg = 2; // errMsg 错误信息
}

// Code 响应结果码
enum Code {
    Success = 0; // Success 成功
    Fail = 1; // Fail 失败
}